name: Autorelease

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Retrieve the latest version from the GitHub API.
      run: LATEST_TAG=$(curl -s "https://api.github.com/repos/avighnac/arithmetica-tui/releases/latest" | jq -r '.tag_name')
    - name: Calculate the autorelease number with the help of the GitHub API.
      run: AUTORELEASE_NO=$(curl -s "https://api.github.com/repos/avighnac/arithmetica-tui/compare/$LATEST_TAG...HEAD" | jq -r '.total_commits')
    - name: Modify main.cpp
      run: sed -i "s/std::string autorelease = \".*\";/std::string autorelease = \"$AUTORELEASE_NO\";/" ../src/main.cpp
    - name: Compile arithmetica for a GitHub release
      run: |
        cmake --no-warn-unused-cli -DBUILD_RELEASE=ON -DCMAKE_EXPORT_COMPILE_COMMANDS=TRUE -DCMAKE_BUILD_TYPE=Release -S . -B build -G "Unix Makefiles"
        cmake --build build --config Release --target all -j 10 --
    - name: Create a GitHub (pre)release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: $LATEST_TAG-alpha-$AUTORELEASE_NO
        release_name: $LATEST_TAG-alpha-$AUTORELEASE_NO
        draft: false
        prerelease: true
    - name: Upload executable for Linux.
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/src/arithmetica
        asset_name: arithmetica.out
        asset_content_type: application/x-executable